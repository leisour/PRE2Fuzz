
# 使用 Ubuntu 20.04 作为基础镜像
FROM ubuntu:20.04

# 设置非交互式前端，防止apt-get安装过程中出现交互式提示
ENV DEBIAN_FRONTEND=noninteractive

# 更新包列表，安装所需软件包
RUN apt-get update && \
	apt-get upgrade -y && \
	apt-get install -y \
	openssl libssl-dev \
	unzip \
	git build-essential cmake \
	libglib2.0-dev libcairo2-dev \
	autoconf  \
	llvm llvm-dev clang \
	gnutls-dev \
	libgnutls28-dev \
	lcov \
	libcjson-dev \
	xsltproc \
	docbook-xsl 

# 设置工作目录
WORKDIR /root/

# 克隆 pcguard-cov 仓库
RUN git clone https://github.com/csu-wingmate/pcguard-cov.git

# 切换到 pcguard-cov 目录并解压文件
WORKDIR /root/pcguard-cov
RUN unzip -o pcguard-cov.zip
# 编译 pcguard-cov
RUN make
RUN cp collect.py /root/collect.py

# 切换到 llvm_mode 目录并编译
WORKDIR /root/pcguard-cov/llvm_mode
RUN AFL_TRACE_PC=1 make

WORKDIR /root
RUN git clone https://github.com/eclipse/mosquitto.git
WORKDIR  /root/mosquitto
RUN git clone https://github.com/DaveGamble/cJSON 
WORKDIR /root/mosquitto/cJSON
RUN mkdir build 
WORKDIR /root/mosquitto/cJSON/build
RUN apt install cmake
RUN cmake ..
RUN make
RUN make install 

WORKDIR /root/mosquitto
ENV CC=/root/pcguard-cov/afl-clang-fast CXX=/root/pcguard-cov/afl-clang-fast++
ENV CFLAGS="-Wall -O1 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fsanitize-coverage=trace-pc-guard -I/usr/include"
ENV CXXFLAGS="-Wall -O1 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fsanitize-coverage=trace-pc-guard -I/usr/include"
ENV LDFLAGS="-fsanitize=address,undefined -L/usr/local/lib64/x86_64-linux-gnu -lssl -lcrypto -lcjson"
ENV AFL_USE_ASAN=1 ASAN_OPTIONS=detect_leaks=0
RUN make clean
RUN make


WORKDIR /root
COPY --chown=ubuntu:ubuntu --chmod=755 run.sh /root/run.sh


# 容器启动命令
CMD ["bash"]
